export default DOM;
declare namespace DOM {
    export function byId(id: any): void | HTMLElement;
    export function removeClass(el: any, className: any): void;
    export function all(node: any, query: any, callback: any): any[];
    export function childNodeLength(html: any): number;
    export function isUploadInput(el: any): boolean;
    export function isAutoUpload(inputEl: any): any;
    export function findUploadInputs(node: any): any[];
    export function findComponentNodeList(node: any, cid: any): any;
    export function isPhxDestroyed(node: any): boolean;
    export function wantsNewTab(e: any): any;
    export function isUnloadableFormSubmit(e: any): boolean;
    export function isNewPageClick(e: any, currentLocation: any): boolean;
    export function markPhxChildDestroyed(el: any): void;
    export function findPhxChildrenInFragment(html: any, parentId: any): any[];
    export function isIgnored(el: any, phxUpdate: any): boolean;
    export function isPhxUpdate(el: any, phxUpdate: any, updateTypes: any): boolean;
    export function findPhxSticky(el: any): any[];
    export function findPhxChildren(el: any, parentId: any): any[];
    export function findExistingParentCIDs(node: any, cids: any): Set<any>;
    export function filterWithinSameLiveView(nodes: any, parent: any): any;
    export function withinSameLiveView(node: any, parent: any): boolean;
    function _private(el: any, key: any): any;
    export { _private as private };
    export function deletePrivate(el: any, key: any): void;
    export function putPrivate(el: any, key: any, value: any): void;
    export function updatePrivate(el: any, key: any, defaultVal: any, updateFunc: any): void;
    export function syncPendingAttrs(fromEl: any, toEl: any): void;
    export function copyPrivates(target: any, source: any): void;
    export function putTitle(str: any): void;
    export function debounce(el: any, event: any, phxDebounce: any, defaultDebounce: any, phxThrottle: any, defaultThrottle: any, asyncFilter: any, callback: any): any;
    export function triggerCycle(el: any, key: any, currentCycle: any): void;
    export function once(el: any, key: any): boolean;
    export function incCycle(el: any, key: any, trigger?: () => void): any;
    export function maintainPrivateHooks(fromEl: any, toEl: any, phxViewportTop: any, phxViewportBottom: any): void;
    export function putCustomElHook(el: any, hook: any): void;
    export function getCustomElHook(el: any): any;
    export function isUsedInput(el: any): any;
    export function resetForm(form: any): void;
    export function isPhxChild(node: any): any;
    export function isPhxSticky(node: any): boolean;
    export function isChildOfAny(el: any, parents: any): boolean;
    export function firstPhxChild(el: any): any;
    export function dispatchEvent(target: any, name: any, opts?: {}): void;
    export function cloneNode(node: any, html: any): any;
    export function mergeAttrs(target: any, source: any, opts?: {}): void;
    export function mergeFocusedInput(target: any, source: any): void;
    export function hasSelectionRange(el: any): boolean;
    export function restoreFocus(focused: any, selectionStart: any, selectionEnd: any): void;
    export function isFormInput(el: any): any;
    export function syncAttrsToProps(el: any): void;
    export function isTextualInput(el: any): boolean;
    export function isNowTriggerFormExternal(el: any, phxTriggerExternal: any): boolean;
    export function cleanChildNodes(container: any, phxUpdate: any): void;
    export function replaceRootContainer(container: any, tagName: any, attrs: any): any;
    export function getSticky(el: any, name: any, defaultVal: any): any;
    export function deleteSticky(el: any, name: any): void;
    export function putSticky(el: any, name: any, op: any): void;
    export function applyStickyOperations(el: any): void;
    export function isLocked(el: any): any;
}
